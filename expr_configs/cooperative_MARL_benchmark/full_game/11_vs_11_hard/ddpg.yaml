expr_group: gr_football
expr_name: full_game_10_vs_10_hard_ddpg
log_dir: ./logs             # log directory
seed: 0
eval_only: False            # True if only want evaluation

distributed:
  use: False
  auto_connect:
  auto_copy:
  nodes:
    master:
      ip: "auto"
    workers:      
      - ip:

framework:
  name: "psro"                # framework name
  max_rounds: 1         # psro rounds
  meta_solver: "nash"         # 'nash', 'uniform', 'pfsp'
  sync_training: True        # TODO[jh]: on_policy, sync_off_policy, async_off_policy
  on_policy: False
  stopper:
    type: "win_rate_stopper"
    kwargs:
      min_win_rate: 1.1
      max_steps: 1000          #iteration at each psro round
agent_manager:
  num_agents: 2
  share_policies: False

evaluation_manager:
  num_eval_rollouts: 1

policy_data_manager:
  update_func: "gr_football" 
  fields:
    payoff:
      type: "matrix"
      missing_value: -100 
    score:
      type: "matrix"
      missing_value: -100 
    win:
      type: "matrix"
      missing_value: -100 
    lose:
      type: "matrix"
      missing_value: -100 
    my_goal:
      type: "matrix"
      missing_value: -100 
    goal_diff:
      type: "matrix"
      missing_value: -100 
        
monitor:
  type: "local"   #'remote': wandb or 'local': tensorboard
  distributed:
    resources:
      num_cpus: 1
      resources:
        - ["node:${distributed.nodes.master.ip}",0.01]

rollout_manager:
  distributed:
    resources:
      num_cpus: 1
      resources:
        - ["node:${distributed.nodes.master.ip}",0.01]
  num_workers: 10     # numbers of parallel rollout worker, one env per worker by default
  seed: 12345
  saving_interval: 100 # the frequency of dumping model's weight
  batch_size: ${rollout_manager.num_workers}
  eval_batch_size: 100
  eval_freq: 100 # epochs
  rollout_metric_cfgs:
    reward:
      type: "sliding"
      window_size: 20
      init_list: [-10000]
    win:
      type: "sliding"
      window_size: 20
      init_list: [0,0,0,0,0]
  worker:
    distributed:
      resources:
        num_cpus: 1
    rollout_length: 3001                                    # episode length
    eval_rollout_length: 3001
    sample_length: 0                                     # every $sample_length traj will be push to buffer during rollout
    padding_length: # of not use in gr_football
    rollout_func_name: "rollout_func"
    episode_mode: 'time-step'                                    # traj or time-step
    envs:
      - cls: "gr_football"
        id_prefix: "gr_footbal"
        scenario_config:
          env_name: "benchmark_full_game_11_vs_11_hard"
          number_of_left_players_agent_controls: 10
          number_of_right_players_agent_controls: 1
          representation: "raw"
          rewards: "scoring,checkpoints"
          stacked: False
          logdir: '/tmp/football/malib_psro'
          write_goal_dumps: False
          write_full_episode_dumps: False
          render: False
          other_config_options:
            action_set: v2  #default/v2, v2 is only used for built-in AI
        reward_config:
          goal_reward: 0
          official_reward: 1
    credit_reassign:
    decaying_exploration:
      init_noise: 0             #random exploration noise level
      total_epoch_to_zero: 2000    #number of epoch when exploration noise decay to zero
      interval: 400                #number of epoch at each fixed exploration noise level

training_manager:
  distributed:
    resources:
      num_cpus: 1
      resources:
        - ["node:${distributed.nodes.master.ip}",0.01]
 
  master_addr: "127.0.0.1"
  master_port:  "12774"
  local_queue_size: 1
  batch_size: ${rollout_manager.batch_size} # how many data sample from DatasetServer per time.
  num_prefetchers: 1
  data_prefetcher:
    distributed:
      resources:
        num_cpus: 1
  num_trainers: 1 # equals to number of GPUs by default
  # control the frequency of remote parameter update
  update_interval: 1
  gpu_preload: False
  trainer:
    distributed:
      resources:
        num_cpus: 1
        num_gpus: 1
        resources:
          - ["node:${distributed.nodes.master.ip}",0.01]
    optimizer: "Adam"
    actor_lr: 5.e-4
    critic_lr: 5.e-4
    opti_eps: 1.e-5
    weight_decay: 0.0
    lr_decay: False            #update_linear_schedule
    lr_decay_epoch: 2000      #how many rollout steps till zero

data_server:
  distributed:
    resources:
      num_cpus: 1
      resources:
        - ["node:${distributed.nodes.master.ip}",0.01]
  table_cfg:
    capacity: 100000
    sampler_type: "lumrf"
    sample_max_usage: 100
    rate_limiter_cfg:
      min_size: ${training_manager.batch_size}
      # r_w_ratio: 10.0
  read_timeout: 1

policy_server:
  distributed:
    resources:
      num_cpus: 1
      resources:
        - ["node:${distributed.nodes.master.ip}",0.01]

populations:
  - population_id: default # population_id
    algorithm:
      name: "DDPG"
      model_config:
        model: "gr_football.ddpg_discrete_11_v_11"       # model type
        initialization:
          use_orthogonal: True
          gain: 1.
        actor:
          network: mlp
          layers:
            - units: 256
              activation: ReLU
            - units: 128
              activation: ReLU
            - units: 64
              activation: ReLU
          output:
            activation: False
        critic:
          network: mlp
          layers:
            - units: 256
              activation: ReLU
            - units: 128
              activation: ReLU
            - units: 64
              activation: ReLU
          output:
            activation: False

      # set hyper parameter
      custom_config:
        FE_cfg:
          num_players: 22    #config sent to the Feature Encoder
        gamma: 0.995
        use_cuda: False  # enable cuda or not
        use_q_head: False
        ppo_epoch: 10
        num_mini_batch: 1  # the number of mini-batches
        target_update_freq: 1
        target_update_lr: 0.1     #soft update tau


        return_mode: new_gae
        gae:
          gae_lambda: 0.95
        vtrace:
          clip_rho_threshold: 1.0
          clip_pg_rho_threshold: 100.0

        use_rnn: False
        # this is not used, instead it is fixed to last hidden in actor/critic
        rnn_layer_num: 1
        rnn_data_chunk_length: 16

        use_feature_normalization: True
        use_popart: True
        popart_beta: 0.99999

        entropy_coef: 0.00
        clip_param: 0.2
        # kl_early_stop: 0.01

        use_modified_mappo: False

      policy_init_cfg:
        agent_0: # agent_id
          new_policy_ctr_start: -1
          init_cfg:
            - condition: "==0" # condition if True in order
              strategy: random # now support pretrained, inherit_last, random
              policy_id: 
              policy_dir:
          initial_policies:

        agent_1:
          new_policy_ctr_start: -1
          init_cfg:
            - condition: "==0" # condition if True in order
              strategy: pretrained # now support pretrained, inherit_last, random
              policy_id: built_in
              policy_dir: light_malib/trained_models/gr_football/11_vs_11/built_in
          initial_policies:                         #initial population